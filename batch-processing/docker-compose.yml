version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test:
        ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 5s
      timeout: 10s
      retries: 4

  # reader:
  #   build:
  #     context: .
  #     dockerfile: go.Dockerfile
  #     target: reader_server
  #   container_name: reader
  #   restart: always
  #   ports:
  #     - "50051:50051"
  #   env_file:
  #     - .env

  # downloader:
  #   build:
  #     context: .
  #     dockerfile: go.Dockerfile
  #     target: downloader
  #   container_name: downloader
  #   restart: always
  #   volumes:
  #     - ./outputs:/outputs
  #   env_file:
  #     - .env

  # converter:
  #   build:
  #     context: .
  #     target: run
  #   restart: always
  #   container_name: converter
  #   volumes:
  #     - ./outputs:/outputs
  #   env_file:
  #     - .env

  # uploader:
  #   build:
  #     context: .
  #     dockerfile: go.Dockerfile
  #     target: uploader
  #   restart: always
  #   container_name: uploader
  #   volumes:
  #     - ./outputs:/outputs
  #   env_file:
  #     - .env

  # # writer: